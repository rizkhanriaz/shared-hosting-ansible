---

- name: Install required tools for compiling git
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - "{{ git_required_packages }}"
  tags: [git, install]


# Download git sources from github releases:
# https://github.com/git/git/releases
#
- name: Download git sources
  get_url:
    dest: "{{ git_sources_location }}"
    url: "https://github.com/git/git/archive/v{{ git_version }}.tar.gz"
  tags: [git, install]

- name: Unpack downloaded git sources
  unarchive:
    src: "{{ git_sources_location }}/git-{{ git_version }}.tar.gz"
    dest: "{{ git_sources_location }}"
    owner: "{{ build_user }}"
    group: "{{ build_group }}"
    copy: no
    creates: "{{ git_sources_location }}/git-{{ git_version }}"
  tags: [git, install]

- name: Compile git
  command: "{{ item }}"
  args:
    chdir: "{{ git_sources_location }}/git-{{ git_version }}"
  with_items:
    - make clean
    - make configure
    - "./configure CFLAGS='-I{{ openssl_install_path }}/include' LDFLAGS='-L{{ openssl_install_path }}/lib' --prefix={{ git_install_path }} --with-openssl={{ openssl_install_path }}"
    - make
  become: true
  become_user: "{{ build_user }}"
  tags: [git, install]

- name: Check if custom OpenSSL is used
  shell: "ldd {{ git_sources_location }}/git-{{ git_version }}/git-http-fetch | grep '{{ openssl_install_path }}'"
  changed_when: false
  tags: [git, install]

- name: Install compiled git
  command: make install
  args:
    chdir: "{{ git_sources_location }}/git-{{ git_version }}"
  tags: [git, install]

- name: Cleanup downloaded sources
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ git_sources_location }}/git-{{ git_version }}.tar.gz"
    - "{{ git_sources_location }}/git-{{ git_version }}"
  when: "git_cleanup_after_install == true"
  tags: [git, install]

- name: Add GIT executables to PATH
  template:
    src: git.sh.j2
    dest: /etc/profile.d/git.sh
    owner: root
    group: root
    mode: 0644
  tags: [git, install]
